{"version":3,"sources":["components/ContactForm/ContactForm.styles.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.styles.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","App.styles.jsx","App.jsx","index.js"],"names":["Form","styled","form","Title","h3","SubmitBtn","button","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","pattern","title","autoComplete","onChange","required","Component","List","ul","Item","li","ContactsList","filtredContacts","deleteContact","map","cont","onClick","id","Label","label","p","Filter","Container","div","h2","App","contacts","filter","contactId","prevState","contact","addContact","normalizedName","toLowerCase","find","el","alert","shortid","generate","changeFilter","getFiltredContacts","normalizedFilter","includes","JSON","parse","localStorage","getItem","_","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b342778e.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\nwidth: 400px;\r\npadding: 10px;\r\nmargin-bottom: 30px;\r\ndisplay: grid;\r\ngrid-template-columns: 1fr;\r\ngap: 25px;\r\nborder: 1px solid black;\r\n`\r\n\r\nexport const Title = styled.h3`\r\nmargin-bottom: 7px;\r\n`\r\n\r\nexport const SubmitBtn = styled.button`\r\nwidth:172px;\r\n`","import React, { Component } from 'react';\r\nimport { Form, SubmitBtn, Title } from './ContactForm.styles';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          <Title>Name: </Title><input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            autoComplete=\"off\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <Title>Number: </Title><input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            autoComplete=\"off\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <SubmitBtn type=\"submit\">Add Contact</SubmitBtn>\r\n      </Form>\r\n    )\r\n  }\r\n};\r\n\r\nexport default ContactForm;","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\nwidth: 400px;\r\nlist-style: none;\r\n`\r\nexport const Item = styled.li`\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding-left: 15px;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { List, Item } from '../ContactsList/ContactsList.styles';\r\n\r\nconst ContactsList = ({ filtredContacts, deleteContact }) => {\r\n  return (\r\n    <List>\r\n      {filtredContacts().map(cont => {\r\n        return (\r\n          <Item key={cont.id}>\r\n            <p>{`${cont.name}: ${cont.number}`}</p>\r\n            <button onClick={() => deleteContact(cont.id)}>Delete</button>\r\n          </Item>\r\n        )\r\n      })}\r\n    </List>\r\n  )\r\n};\r\n\r\nContactsList.propTypes = {\r\n  filtredContacts: PropTypes.func.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\ndisplay: block;\r\nmargin-bottom: 15px;\r\n`\r\n\r\nexport const Title = styled.p`\r\nfont-weight: 500;\r\nmargin-bottom: 10px;\r\n`","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Label, Title } from '../Filter/Filter.styles';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <Label>\r\n      <Title>Find contacts by name:</Title>\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </Label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\npadding: 25px;\r\n`\r\nexport const Title = styled.h2`\r\nmargin-bottom: 15px;\r\n`","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\nimport { Container, Title } from './App.styles.jsx';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n\n    this.setState({ contacts });\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }))\n  }\n\n  addContact = ({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n    const isAlreadyinContacts = this.state.contacts.find(el => el.name.toLowerCase() === normalizedName);\n\n    if (isAlreadyinContacts) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number\n    }\n\n    this.setState(({contacts}) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  }\n\n  getFiltredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(cont =>\n      cont.name.toLowerCase().includes(normalizedFilter));\n  }\n\n  render() {\n    return (\n      <Container>\n        <Title>Phonebook</Title>\n        <ContactForm onSubmit={this.addContact} />\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        \n        <Title>Contacts</Title>\n        <ContactsList filtredContacts={this.getFiltredContacts} deleteContact={this.deleteContact}/>\n    </Container>\n  )};\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}